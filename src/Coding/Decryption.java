/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coding;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author gaurav
 */
public class Decryption extends javax.swing.JFrame {

    BufferedImage Image = null;     
    public Decryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelImage = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessage = new javax.swing.JTextArea();
        jButtonOpen = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButtonDecode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("image")));

        jLabelImage.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelImage, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
        );

        jTextMessage.setColumns(20);
        jTextMessage.setRows(5);
        jTextMessage.setBorder(javax.swing.BorderFactory.createTitledBorder("Decoded  Message"));
        jScrollPane1.setViewportView(jTextMessage);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonOpen.setText("Open");
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonDecode.setText("Decode");
        jButtonDecode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDecodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jButtonDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDecode, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private File showFileDialog(final boolean open){
           JFileChooser fc = new JFileChooser("open an image");
           FileFilter filefilter = new FileFilter(){
               @Override
               public boolean accept(File file) {
                String name = file.getName().toLowerCase();
                if(open)
                    return file.isDirectory() || name.endsWith(".jpg") || name.endsWith(".jpeg")
                            || name.endsWith(".png") || name.endsWith(".bmg");
                return file.isDirectory() || name.endsWith(".png") || name.endsWith(".bmg");
                
                       
                   
               }
               @Override
               public String getDescription(){
                   if (open)
                       return "Image (*.jpg, *.jpeg, *.png, *.bmp)";
                   return "Image (*.png, *.bmp)";
                     
             }
           };
           fc.setAcceptAllFileFilterUsed(false);
           fc.addChoosableFileFilter(filefilter);
           
                   
           File file = null;
            if(fc.showOpenDialog(this)== JFileChooser.APPROVE_OPTION && open)
               file = fc.getSelectedFile();
           else if(!open && fc.showSaveDialog(this)== fc.APPROVE_OPTION)
               file = fc.getSelectedFile();
               return file;
               
               
           
       }
    
 
    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
     File file = showFileDialog(true);
        if(file == null) {
            return; 
         
        }
           
       try {
           Image = ImageIO.read(file);
           System.out.println("comes here before setIcon?");
           jLabelImage.setIcon(new ImageIcon(Image));
           System.out.println("comes here?");
           this.validate();
           System.out.println("comes here?");
           
           
       } catch (IOException ex) {
         ex.printStackTrace();
         
           
       }
         
    }//GEN-LAST:event_jButtonOpenActionPerformed

    private void jButtonDecodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDecodeActionPerformed
        
        if (Image == null){
            JOptionPane.showMessageDialog(this, "First Open a Image");
             return;
        }
        int len = extractInteger(Image, 0, 0);
        byte b[] = new byte[len];
        for(int i = 0; i<len; i++)
            b[i] = extractByte(Image, i*8+32, 0);
        jTextMessage.setText(new String(b)); 
        
    }//GEN-LAST:event_jButtonDecodeActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
       Image = null;
       jTextMessage.setText("");
       jLabelImage.setIcon(null);
    }//GEN-LAST:event_jButtonResetActionPerformed
        
    private int extractInteger(BufferedImage img, int start, int storageBit){
        int maxX = img.getWidth(), maxY = img.getHeight(),
        startX = start/maxY, startY = start - startX*maxY, count = 0;
        int length = 0;
        for(int i = startX; i<maxX && count<32; i++){
            for(int j = startY; j<maxY && count < 32; j++){
                int rgb = img.getRGB(i, j), bit = getBitvalue(rgb, storageBit);
                length = setBitValue(length, count, bit);
                count ++;
                
            }
          }
          return length;
          
    }
     
      private byte extractByte(BufferedImage img, int start, int storageBit){
          int maxX = img.getWidth(), maxY = img.getHeight(),
        startX = start/maxY, startY = start - startX*maxY, count = 0;   
          byte b = 0;
          for(int i = startX; i<maxX && count<8; i++){
            for(int j = startY; j<maxY && count < 8; j++){
                int rgb = img.getRGB(i, j), bit = getBitvalue(rgb, storageBit);
                b = (byte) setBitValue(b, count, bit);
                count ++;
            }
        }
          return b;
      }
          
           private int getBitvalue(int n, int location) {
           int v = (int) (n & Math.round(Math.pow(2, location)));
           return v == 0?0:1;
           
       }
       
            
    private int setBitValue(int n, int location, int bit){
           int toggle = (int) Math.pow(2, location),  bv = getBitvalue(n, location);
           if(bv == bit)
               return n;
           if(bv == 0 && bit ==1)
               n |= toggle;
           else if(bv == 1 && bit == 0)
               n ^= toggle;
           return n;
       }   
    
    
    
    
    
        
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDecode;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabelImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextMessage;
    // End of variables declaration//GEN-END:variables
}
